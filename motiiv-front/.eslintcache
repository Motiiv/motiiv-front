[{"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/index.js":"1","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/reportWebVitals.js":"2","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/App.js":"3","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/modules/index.js":"4","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/modules/user.js":"5","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Detail/Detail.js":"6","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Upload/Upload.js":"7","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Category/Category.js":"8","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Admin/Admin.js":"9","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Main/Main.js":"10","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/modules/loading.js":"11","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/lib/createRequestSaga.js":"12","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/lib/api/user.js":"13","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/SignUp/SignUp.js":"14","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/SignIn/SignIn.js":"15","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/MyMotiiv/MyMyotiiv.js":"16","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/lib/api/client.js":"17"},{"size":1185,"mtime":1610742884086,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610136516930,"results":"20","hashOfConfig":"19"},{"size":1489,"mtime":1610742884080,"results":"21","hashOfConfig":"19"},{"size":305,"mtime":1610742884087,"results":"22","hashOfConfig":"19"},{"size":1914,"mtime":1610742884087,"results":"23","hashOfConfig":"19"},{"size":141,"mtime":1610742884088,"results":"24","hashOfConfig":"19"},{"size":141,"mtime":1610136516929,"results":"25","hashOfConfig":"19"},{"size":131,"mtime":1610742884088,"results":"26","hashOfConfig":"19"},{"size":125,"mtime":1610742884087,"results":"27","hashOfConfig":"19"},{"size":123,"mtime":1610742884088,"results":"28","hashOfConfig":"19"},{"size":648,"mtime":1610742884087,"results":"29","hashOfConfig":"19"},{"size":822,"mtime":1610742884086,"results":"30","hashOfConfig":"19"},{"size":210,"mtime":1610742884086,"results":"31","hashOfConfig":"19"},{"size":127,"mtime":1610742884089,"results":"32","hashOfConfig":"19"},{"size":141,"mtime":1610742884088,"results":"33","hashOfConfig":"19"},{"size":133,"mtime":1610742884088,"results":"34","hashOfConfig":"19"},{"size":137,"mtime":1610742884086,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"66vxsy",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/index.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/reportWebVitals.js",[],["76","77"],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/App.js",["78"],"import './App.css';\nimport Detail from './pages/Detail/Detail';\nimport SignUp from './pages/SignUp/SignUp';\nimport SignIn from './pages/SignIn/SignIn';\nimport Upload from './pages/Upload/Upload';\nimport Main from './pages/Main/Main';\nimport Category from './pages/Category/Category';\nimport MyMyotiiv from './pages/MyMotiiv/MyMyotiiv';\nimport Admin from './pages/Admin/Admin';\n\nimport {\n  BrowserRouter as Router, Route, Switch\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n        <Switch>\n          {/* Main & Category & MyMotiiv */}\n          <Route exact path='/main' render={(props)=>(<Main props={props} />)}></Route>\n          <Route exact path='/category' render={(props)=>(<Category props={props} />)}></Route>\n          <Route exact path='/mymotiiv' render={(props)=>(<MyMyotiiv props={props} />)}></Route>\n          {/* SignUp & SignIn */}\n          <Route exact path='/signup' render={(props)=>(<SignUp props={props}/>)}></Route> \n          <Route exact path='/signin' render={(props)=>(<SignIn props={props}/>)}></Route>\n          {/* Admin */}\n          <Route exact path='/admin' render={(props)=>(<Admin props={props} />)}></Route>\n          {/* Detail */}\n          <Route exact path='/detail/:id' render={(props)=>(<Detail props={props} />)}></Route>\n          {/* Upload */}\n          <Route exact path='/upload' render={(props)=>(<Upload props={props}/>)}></Route>\n          <Route path='/*'>404 NOT FOUND</Route>\n        </Switch>\n  );\n}\n\nexport default App;","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/modules/index.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/modules/user.js",["79","80","81"],"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga from '../lib/createRequestSaga';\nimport { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as userAPI from '../lib/api/user';\nimport { takeLatest } from 'redux-saga/effects';\n\n/* ============== 성공,실패 액션을 생성 ============== */\n//프로필 정보\nconst [\n  GET_PROFILE,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAILURE,\n] = createRequestActionTypes('user/GET_PROFILE');\n//프로필 정보 수정\nconst [\n  UPDATE_PROFILE,\n  UPDATE_PROFILE_SUCCESS,\n  UPDATE_PROFILE_FAILURE,\n] = createRequestActionTypes('user/UPDATE_PROFILE');\n//회원가입\nconst [\n  CREATE_USER,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILURE,\n] = createRequestActionTypes('user/CREATE_USER');\n//로그인\nconst [\n  LOGIN,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE\n] = createRequestActionTypes('user/LOGIN');\n//회원가입 정보 저장(카카오)\nconst SIGNUP_KAKAO = createRequestActionTypes('user/SIGNUP_KAKAO');\n//회원가입 정보 초기화\nconst RESET_SIGNUP = createRequestActionTypes('user/RESET_SIGNUP');\n//회원가입 정보 저장(직업)\nconst SIGNUP_JOB = createRequestActionTypes('user/SIGNUP_JOB');\n//회원가입 정보 저장(관심사)\nconst SIGNUP_KEYWORDS = createRequestActionTypes('user/SIGNUP_KEYWORDS');\n//로그인 여부 변경\nconst CHANGE_ISLOGGED = createRequestActionTypes('user/CHANGE_ISLOGED');\n\n/* ============== 액션 호출 함수 생성 ============== */\n//프로필 정보\nexport const getProfile = createAction(GET_PROFILE);\n//프로필 정보 수정\nexport const updateProfile = createAction(UPDATE_PROFILE, payload => payload);\n//회원가입\nexport const createUser = createAction(CREATE_USER, payload => payload);\n//로그인\nexport const login = createAction(LOGIN, payload => payload);\n//회원가입 정보 저장(카카오)\nexport const signUpKakao = createAction(SIGNUP_KAKAO);\n//회원가입 정보 초기화\nexport const resetSignUpInfo = createAction(RESET_SIGNUP);\n//회원가입 정보 저장(직업)\nexport const signUpJob = createAction(SIGNUP_JOB);\n//회원가입 정보 저장(관심사)\nexport const signUpKeywords = createAction(SIGNUP_KEYWORDS);\n// isLogined state 변경 (자동로그인)\nexport const changeIsLogged = createAction(CHANGE_ISLOGGED);\n\n/* ============== 해당하는 액션 호출시 Saga실행 ============== */\n//프로필 정보\nconst getUserSaga = createRequestSaga(GET_PROFILE, userAPI.getUserProfile);\n//프로필 정보 수정\nconst updateUserSaga = createRequestSaga(UPDATE_PROFILE, userAPI.updateUserProfile);\n//회원가입\nconst createUserSaga = createRequestSaga(CREATE_USER, userAPI.createUser);\n//로그인\nconst loginSaga = createRequestSaga(LOGIN, userAPI.login);\n\n/* ============== 요청된 것들 중 가장 마지막 요청만 처리 (여러번 클릭시 모두 처리되면 매우 비효율적!) ============== */\nexport function* userSaga() {\n  yield takeLatest(GET_PROFILE, getUserSaga);\n  yield takeLatest(UPDATE_PROFILE, updateUserSaga);\n  yield takeLatest(CREATE_USER, createUserSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\n\n/* ============== State 초기값 ============== */\nconst initState = {\n  isSignedUp: null,\n\n  userInfo: {\n    id: null,\n    username: '',\n    profileImageUrl: '',\n    socialType: '',\n    snsId: null,\n    Job: {\n      id: null,\n      name: '',\n    },\n    UserKeywords: [],\n    userToken: '',\n  },\n  userToken: '',\n  isLoggedIn: false,\n\n  signUpKakao: {\n    username: '',\n    profileImageUrl: '',\n    socialType: '',\n    snsId: '',\n  },\n\n  jobName: '',\n\n  keywordNames: [],\n  settingKeywords: [],\n};\n\n/* ============== 액션을 store에 저장하는 리듀서를 handleActions로 처리 ============== */\nconst user = handleActions(\n  {\n    //유저 정보 조회\n    [GET_PROFILE_SUCCESS]: (state, { payload: userInfo }) => ({\n      ...state,\n      userInfo,\n      settingKeywords:\n        userInfo.UserKeywords.length === 1\n          ? [userInfo.UserKeywords[0].name]\n          : userInfo.UserKeywords.length === 2\n          ? [userInfo.UserKeywords[0].name, userInfo.UserKeywords[1].name]\n          : userInfo.UserKeywords.length === 3\n          ? [\n              userInfo.UserKeywords[0].name,\n              userInfo.UserKeywords[1].name,\n              userInfo.UserKeywords[2].name,\n            ]\n          : [],\n    }),\n    [GET_PROFILE_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    //유저 정보 수정\n    [UPDATE_PROFILE_SUCCESS]: (state, { payload: userInfo }) => ({\n      ...state,\n      userInfo,\n    }),\n    [UPDATE_PROFILE_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    //회원가입\n    [CREATE_USER_SUCCESS]: (state, { payload: userInfo }) => ({\n      ...state,\n      userInfo,\n      isLoggedIn: true,\n    }),\n    [CREATE_USER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n      isLoggedIn: false,\n    }),\n    //회원가입 정보 초기화\n    [RESET_SIGNUP]: (state) => ({\n      ...state,\n      isSignedUp: null\n    }),\n    //로그인\n    [LOGIN_SUCCESS]: (state, { payload: payload }) => ({\n      ...state,\n      userInfo: payload.userToken\n        ? {\n            id: payload.id,\n            username: payload.username,\n            snsId: payload.snsId,\n            socialType: payload.socialType,\n            Job: payload.Job,\n            UserKeywords: payload.UserKeywords,\n            profileImageUrl: payload.profileImageUrl,\n          }\n        : null,\n      userToken: payload.userToken,\n      isLoggedIn: payload.isSignedUp ? true : false,\n      isSignedUp: payload.isSignedUp,\n      profileImageUrl: payload.profileImageUrl,\n    }),\n    [LOGIN_FAILURE]: (state, { payload: data }) => ({\n      ...state,\n      data,\n      isLoggedIn: false,\n    }),\n    //회원가입 정보 저장(카카오)\n    [SIGNUP_KAKAO]: (state, { payload: signUpKakao }) => ({\n      ...state,\n      signUpKakao,\n    }),\n    //회원가입 정보 저장(직업)\n    [SIGNUP_JOB]: (state, { payload: jobName }) => ({\n      ...state,\n      jobName,\n    }),\n    //회원가입 정보 저장(관심사)\n    [SIGNUP_KEYWORDS]: (state, { payload: payload }) => ({\n      ...state,\n      keywordNames: state.keywordNames.indexOf(payload) > -1\n        ? state.keywordNames.filter(keywordNames => keywordNames !== payload) //기존 배열에 있을 경우 삭제\n        : state.keywordNames.length < 3 //새로 받은 키워드가 기존 배열 안에 없을 경우\n          ? state.keywordNames.concat(payload)//기존 배열의 키워드 개수가 2개 이하일 때는 추가\n          : state.keywordNames//3개 이상일 경우 변화 없음\n    }),\n    // 자동로그인 토큰 가지고 정보 가져온 뒤 isloggedin 변환\n    [CHANGE_ISLOGGED]: (state, { payload: payload }) => ({\n      ...state,\n      isLoggedIn: !state.isLoggedIn,\n    }),\n  },\n  initState,\n);\n\nexport default user;\n","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Detail/Detail.js",["82"],"import React, { useState, useEffect } from 'react';\nimport DetailComponent from '../../components/Detail/DetailComponent';\nimport { getDetailVideoInfo } from '../../modules/video';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Detail({ props, showModal, isLoggined }) {\n  const dispatch = useDispatch();\n  const { videoInfo, recVideoList, detailLoading, like, save } = useSelector(\n    ({ video, loading }) => ({\n      videoInfo: video.d_videoInfo,\n      recVideoList: video.d_recVideoList,\n      save: video.save,\n      detailLoading: loading['video/GET_DETAIL_VIDEO_INFO'],\n    }),\n  );\n  useEffect(() => {\n    dispatch(getDetailVideoInfo(props.match.params.id));\n  }, [props.match.params.id]);\n\n  return (\n    <DetailComponent\n      likeStatus={like}\n      saveStatus={save}\n      videoInfo={videoInfo}\n      recVideoList={recVideoList}\n      detailLoading={detailLoading}\n      showModal={showModal}\n      isLoggined={isLoggined}\n    ></DetailComponent>\n  );\n}\n\nexport default React.memo(Detail);\n","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Upload/Upload.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Category/Category.js",["83"],"import React, { useEffect } from 'react';\nimport CategoryComponent from '../../components/Category/CategoryComponent';\nimport { getCategoryKeywords, getCategoryVideos } from '../../modules/video';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Category({ props, showModal, isLoggined }) {\n  const dispatch = useDispatch();\n\n  const {\n    keywords,\n    loading,\n    videos,\n    videoCnt,\n    tagName,\n    c_tagVideos,\n  } = useSelector(({ video, loading }) => ({\n    keywords: video.c_keywords,\n    videos: video.c_videos,\n    videoCnt: video.c_videoCnt,\n    tagName: video.c_tagName,\n    c_tagVideos: video.c_tagVideos,\n    loading: loading['video/GET_CATEGORY_VIDEOS'],\n  }));\n\n  useEffect(() => {\n    dispatch(getCategoryKeywords());\n    dispatch(getCategoryVideos({ keyword: 0, filters: 'new' }));\n  }, []);\n\n  return (\n    <CategoryComponent\n      tagName={tagName}\n      videoCnt={videoCnt}\n      loading={loading}\n      keywords={keywords}\n      videos={props.match.params.hashTag === '1' ? c_tagVideos : videos}\n      hashTag={props.match.params.hashTag}\n      showModal={showModal}\n      isLoggined={isLoggined}\n    ></CategoryComponent>\n  );\n}\n\nexport default React.memo(Category);\n","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Admin/Admin.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/Main/Main.js",["84"],"import React, { useEffect, useState } from 'react';\nimport SwiperBanner from './sections/SwiperBanner';\nimport AdBanner from './sections/AdBanner';\nimport Section from '../../components/common/Section/Section';\nimport { getMainBanners, getMainRecommend } from '../../modules/video';\nimport { createDispatchHook, useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Loading from '../../components/common/Loading/Loading';\nimport ImageSlider from '../../components/common/Section/ImageSlider';\nimport BlackModal from '../../components/common/Modal/BlackModal';\nimport { useLocation } from 'react-router-dom';\n\nconst Container = styled.div`\n  width: 100%;\n  /* height: 51rem; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.lightGray};\n  @media ${props => props.theme.mobile} {\n    /* height: 30rem; */\n    margin-bottom: 1.6rem;\n  }\n  @media ${props => props.theme.tablet} {\n    /* height: 37.2rem; */\n    margin-bottom: 0;\n  }\n  @media ${props => props.theme.desktop} {\n    /* height: 51rem; */\n    margin-bottom: 0;\n  }\n`;\n//Section도 페이지별로 쓰이니까 maxwidth 1280px\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1280px;\n  display: flex;\n  flex-direction: column;\n  @media ${props => props.theme.mobile} {\n    max-width: 768px;\n  }\n  @media ${props => props.theme.tablet} {\n    min-width: 768px;\n  }\n  @media ${props => props.theme.desktop} {\n    min-width: 1280px;\n  }\n`;\n\nconst Wrap = styled.div`\n  margin-left: 5.5rem;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${props => (props.text ? '5.1rem' : '3rem')};\n  @media ${props => props.theme.mobile} {\n    margin-left: 2rem;\n    margin-top: 1.5rem;\n    margin-bottom: ${props => (props.text ? '2rem' : '1rem')};\n  }\n  @media ${props => props.theme.tablet} {\n    margin-left: 4rem;\n    margin-bottom: ${props => (props.text ? '5.1rem' : '3.4rem')};\n  }\n  @media ${props => props.theme.desktop} {\n    margin-left: 5.5rem;\n    margin-bottom: ${props => (props.text ? '5.1rem' : '3rem')};\n  }\n`;\nconst YeongJinBackground = styled.div`\n  width: 100%;\n  height: 100%;\n  @media ${props => props.theme.mobile} {\n    background-color: ${({ theme }) => theme.lightGray};\n  }\n  @media ${props => props.theme.tablet} {\n    background-color: white;\n  }\n  background-color: ${({ theme }) => theme.lightGray};\n`;\nconst HighLight = styled.span`\n  background: ${({ theme }) => theme.primary};\n  background: var(--highlight);\n`;\nfunction Main({ showModal, isLoggined }) {\n  const dispatch = useDispatch();\n  const [blackModal, setBlackModal] = useState({\n    active: false,\n  });\n  const BlackModalConfirm = () => {\n    if (!isLoggined) {\n      setBlackModal({\n        ...blackModal,\n        active: !blackModal.active,\n      });\n    }\n  };\n  const {\n    banners,\n    recommend,\n    recommendText,\n    loading_banners,\n    loading_recommend,\n  } = useSelector(({ video, loading }) => ({\n    recommend: video.m_recVideoList,\n    banners: video.m_banners,\n    recommendText: video.m_recTextList,\n    loading_recommend: loading['video/GET_MAIN_RECOMMENDS'],\n    loading_banners: loading['video/GET_MAIN_BANNERS'],\n  }));\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    dispatch(getMainBanners());\n    dispatch(getMainRecommend());\n  }, []);\n\n  return (\n    <YeongJinBackground>\n      {blackModal.active && (\n        <BlackModal\n          blackModal={blackModal}\n          setBlackModal={setBlackModal}\n          showModal={showModal}\n        ></BlackModal>\n      )}\n      {Object.keys(banners).length ? (\n        <>\n          <SwiperBanner\n            mostViewVideo={banners.mostViewVideo}\n            mostLikeVideo={banners.mostLikeVideo}\n            bestVideo={banners.thirdVideos}\n          />\n          <Section\n            object={banners.toptenVideo}\n            type=\"top\"\n            size=\"large\"\n            color=\"gray\"\n            text=\"motiiv |top 10|\"\n            BlackModalConfirm={BlackModalConfirm}\n            isLoggined={isLoggined}\n            subText=\"이 영상을 본 80%가 바로 일을 시작했어요!\"\n          ></Section>\n        </>\n      ) : (\n        <Loading\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n          }}\n        ></Loading>\n      )}\n      {recommend &&\n        recommend.map((rec, idx) =>\n          idx === 3 ? (\n            <>\n              <AdBanner adBanners={banners.adBanners} />\n              <Section\n                key={`MainSection-${idx}`}\n                object={rec}\n                text={recommendText[idx].title}\n                subText={recommendText[idx].subtitle}\n                BlackModalConfirm={BlackModalConfirm}\n                isLoggined={isLoggined}\n                nonfix=\"true\"\n              ></Section>\n            </>\n          ) : (\n            <Section\n              key={`MainSection-${idx}`}\n              object={rec}\n              text={recommendText[idx].title}\n              subText={recommendText[idx].subtitle}\n              BlackModalConfirm={BlackModalConfirm}\n              isLoggined={isLoggined}\n              nonfix=\"true\"\n            ></Section>\n          ),\n        )}\n    </YeongJinBackground>\n  );\n}\n\nexport default React.memo(Main);\n","/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/modules/loading.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/lib/createRequestSaga.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/lib/api/user.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/SignUp/SignUp.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/SignIn/SignIn.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/pages/MyMotiiv/MyMyotiiv.js",[],"/Users/koooo/dev/SOPT/motiiv/motiiv-front/motiiv-front/src/lib/api/client.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":64,"column":6,"nodeType":"91","endLine":64,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":164,"column":32,"nodeType":"95","messageId":"96","endLine":164,"endColumn":48,"fix":"97"},{"ruleId":"93","severity":1,"message":"94","line":198,"column":34,"nodeType":"95","messageId":"96","endLine":198,"endColumn":50,"fix":"98"},{"ruleId":"93","severity":1,"message":"94","line":207,"column":34,"nodeType":"95","messageId":"96","endLine":207,"endColumn":50,"fix":"99"},{"ruleId":"89","severity":1,"message":"90","line":18,"column":6,"nodeType":"91","endLine":18,"endColumn":29,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"90","line":28,"column":6,"nodeType":"91","endLine":28,"endColumn":8,"suggestions":"101"},{"ruleId":"89","severity":1,"message":"90","line":115,"column":6,"nodeType":"91","endLine":115,"endColumn":8,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["105"],"no-useless-rename","Destructuring assignment payload unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"106","text":"107"},{"range":"108","text":"107"},{"range":"109","text":"107"},["110"],["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},[4579,4595],"payload",[5565,5581],[6040,6056],{"desc":"115","fix":"116"},{"desc":"113","fix":"117"},{"desc":"113","fix":"118"},"Update the dependencies array to be: [dispatch]",{"range":"119","text":"120"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"121","text":"122"},{"range":"123","text":"120"},{"range":"124","text":"120"},[2298,2300],"[dispatch]",[691,714],"[dispatch, props.match.params.id]",[825,827],[3261,3263]]