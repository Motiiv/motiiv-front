[{"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\index.js":"1","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\reportWebVitals.js":"2","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\App.js":"3","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\style\\theme.js":"4","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\index.js":"5","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\user.js":"6","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\mymotiiv.js":"7","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\style\\color.js":"8","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Privacy\\Privacy.js":"9","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Detail\\Detail.js":"10","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Upload\\Upload.js":"11","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\Main.js":"12","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\MyMotiiv\\Mymotiiv.js":"13","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\Category.js":"14","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\MyMotiiv\\sections\\MyNavbar.js":"15","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Admin\\Admin.js":"16","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\auth.js":"17","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Footer\\Footer.js":"18","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Banner\\BottomBanner.js":"19","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Navbar\\Navbar.js":"20","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\SignInModal.js":"21","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\FloatBtn.js":"22","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\Setting.js":"23","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\video.js":"24","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\auth.js":"25","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\loading.js":"26","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\createRequestSaga.js":"27","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\user.js":"28","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\mymotiiv.js":"29","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Modal\\BlackModal.js":"30","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\_client.js":"31","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\MyMotiiv\\sections\\MyModal.js":"32","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\sections\\SwiperBanner.js":"33","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\sections\\AdBanner.js":"34","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Section\\Section.js":"35","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Section\\ImageSlider.js":"36","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Loading\\Loading.js":"37","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Category\\CategoryComponent.js":"38","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\SpaceBtn.js":"39","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\LastPage.js":"40","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\WorkSpace.js":"41","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\FirstPage.js":"42","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\MoreBtn.js":"43","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Detail\\DetailComponent.js":"44","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\SecondPage.js":"45","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Navbar\\profilemodal\\ProfileModal.js":"46","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\sections\\JobModal.js":"47","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\sections\\InterstComponent.js":"48","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\sections\\InterestModal.js":"49","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\video.js":"50","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\sections\\SwiperContent.js":"51","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\LoginInterestComponent.js":"52","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\WorkSpaceContainer.js":"53","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\ToggleBtn.js":"54","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\kakao.js":"55","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Section\\TitleContent.js":"56","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\AsideMenu.js":"57","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\SortModal.js":"58","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\AsideModal.js":"59","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Save\\Save.js":"60","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Detail\\sections\\ShareModal.js":"61","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Detail\\sections\\RecommendCard.js":"62","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Like\\Like.js":"63","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Tag\\Tag.js":"64","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Card\\Card.js":"65","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Tag\\ProfileTag.js":"66","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\PlusBtn.js":"67","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\WorkSpaceBox.js":"68","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\Menu.js":"69","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Save\\CardSave.js":"70","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\FormBox.js":"71"},{"size":1517,"mtime":1610630656807,"results":"72","hashOfConfig":"73"},{"size":375,"mtime":1610420990739,"results":"74","hashOfConfig":"73"},{"size":5042,"mtime":1610630864809,"results":"75","hashOfConfig":"73"},{"size":774,"mtime":1610579368782,"results":"76","hashOfConfig":"73"},{"size":537,"mtime":1610421003351,"results":"77","hashOfConfig":"73"},{"size":6613,"mtime":1610703064199,"results":"78","hashOfConfig":"73"},{"size":6044,"mtime":1610579377243,"results":"79","hashOfConfig":"73"},{"size":1731,"mtime":1610579368778,"results":"80","hashOfConfig":"73"},{"size":15341,"mtime":1610707362089,"results":"81","hashOfConfig":"73"},{"size":1054,"mtime":1610579368754,"results":"82","hashOfConfig":"73"},{"size":152,"mtime":1610420990737,"results":"83","hashOfConfig":"73"},{"size":8621,"mtime":1610579368760,"results":"84","hashOfConfig":"73"},{"size":4602,"mtime":1610579368767,"results":"85","hashOfConfig":"73"},{"size":1254,"mtime":1610579368742,"results":"86","hashOfConfig":"73"},{"size":2277,"mtime":1610579368773,"results":"87","hashOfConfig":"73"},{"size":122,"mtime":1610421003361,"results":"88","hashOfConfig":"73"},{"size":658,"mtime":1610630656817,"results":"89","hashOfConfig":"73"},{"size":1279,"mtime":1610707811141,"results":"90","hashOfConfig":"73"},{"size":2035,"mtime":1610579368698,"results":"91","hashOfConfig":"73"},{"size":5900,"mtime":1610697961550,"results":"92","hashOfConfig":"73"},{"size":5610,"mtime":1610703104135,"results":"93","hashOfConfig":"73"},{"size":3570,"mtime":1610579368700,"results":"94","hashOfConfig":"73"},{"size":13958,"mtime":1610705368330,"results":"95","hashOfConfig":"73"},{"size":7398,"mtime":1610579368740,"results":"96","hashOfConfig":"73"},{"size":1357,"mtime":1610557517845,"results":"97","hashOfConfig":"73"},{"size":679,"mtime":1610421003353,"results":"98","hashOfConfig":"73"},{"size":882,"mtime":1610630656844,"results":"99","hashOfConfig":"73"},{"size":1981,"mtime":1610630656834,"results":"100","hashOfConfig":"73"},{"size":1638,"mtime":1610468384667,"results":"101","hashOfConfig":"73"},{"size":7503,"mtime":1610579368722,"results":"102","hashOfConfig":"73"},{"size":206,"mtime":1610630656813,"results":"103","hashOfConfig":"73"},{"size":6816,"mtime":1610579368771,"results":"104","hashOfConfig":"73"},{"size":6982,"mtime":1610630656858,"results":"105","hashOfConfig":"73"},{"size":2582,"mtime":1610579368762,"results":"106","hashOfConfig":"73"},{"size":2861,"mtime":1610630656795,"results":"107","hashOfConfig":"73"},{"size":6324,"mtime":1610579368731,"results":"108","hashOfConfig":"73"},{"size":492,"mtime":1610579368715,"results":"109","hashOfConfig":"73"},{"size":9978,"mtime":1610630656765,"results":"110","hashOfConfig":"73"},{"size":2431,"mtime":1610579368704,"results":"111","hashOfConfig":"73"},{"size":2567,"mtime":1610698012860,"results":"112","hashOfConfig":"73"},{"size":3816,"mtime":1610579368691,"results":"113","hashOfConfig":"73"},{"size":2713,"mtime":1610630677565,"results":"114","hashOfConfig":"73"},{"size":992,"mtime":1610579368702,"results":"115","hashOfConfig":"73"},{"size":13375,"mtime":1610703529559,"results":"116","hashOfConfig":"73"},{"size":5180,"mtime":1610703547290,"results":"117","hashOfConfig":"73"},{"size":7645,"mtime":1610703529594,"results":"118","hashOfConfig":"73"},{"size":2662,"mtime":1610704730632,"results":"119","hashOfConfig":"73"},{"size":2601,"mtime":1610704184406,"results":"120","hashOfConfig":"73"},{"size":3708,"mtime":1610703529611,"results":"121","hashOfConfig":"73"},{"size":2399,"mtime":1610630656840,"results":"122","hashOfConfig":"73"},{"size":5968,"mtime":1610579368765,"results":"123","hashOfConfig":"73"},{"size":1347,"mtime":1610701478583,"results":"124","hashOfConfig":"73"},{"size":1561,"mtime":1610579368695,"results":"125","hashOfConfig":"73"},{"size":1646,"mtime":1610579368706,"results":"126","hashOfConfig":"73"},{"size":2054,"mtime":1610631506850,"results":"127","hashOfConfig":"73"},{"size":3053,"mtime":1610579368735,"results":"128","hashOfConfig":"73"},{"size":1016,"mtime":1610579368744,"results":"129","hashOfConfig":"73"},{"size":2585,"mtime":1610579368752,"results":"130","hashOfConfig":"73"},{"size":3439,"mtime":1610579368746,"results":"131","hashOfConfig":"73"},{"size":1625,"mtime":1610579368728,"results":"132","hashOfConfig":"73"},{"size":1945,"mtime":1610579368758,"results":"133","hashOfConfig":"73"},{"size":1057,"mtime":1610579368756,"results":"134","hashOfConfig":"73"},{"size":1510,"mtime":1610579368713,"results":"135","hashOfConfig":"73"},{"size":2750,"mtime":1610610062242,"results":"136","hashOfConfig":"73"},{"size":11645,"mtime":1610703529588,"results":"137","hashOfConfig":"73"},{"size":2330,"mtime":1610630656802,"results":"138","hashOfConfig":"73"},{"size":1515,"mtime":1610579368689,"results":"139","hashOfConfig":"73"},{"size":2586,"mtime":1610579368693,"results":"140","hashOfConfig":"73"},{"size":1858,"mtime":1610579368750,"results":"141","hashOfConfig":"73"},{"size":1773,"mtime":1610579368726,"results":"142","hashOfConfig":"73"},{"size":7008,"mtime":1610579368686,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"sobalt",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"146"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"158","usedDeprecatedRules":"146"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"146"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"146"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"146"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"146"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"146"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"146"},"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\index.js",[],["299","300"],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\reportWebVitals.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\App.js",["301"],"import Detail from './pages/Detail/Detail';\r\nimport Privacy from './pages/Privacy/Privacy';\r\nimport Upload from './pages/Upload/Upload';\r\nimport Main from './pages/Main/Main';\r\nimport Category from './pages/Category/Category';\r\nimport MyMotiiv from './pages/MyMotiiv/Mymotiiv';\r\nimport Setting from './pages/Setting/Setting';\r\nimport Admin from './pages/Admin/Admin';\r\nimport Navbar from './components/common/Navbar/Navbar';\r\nimport BottomBanner from './components/common/Banner/BottomBanner';\r\nimport Footer from './components/common/Footer/Footer';\r\nimport MyNavBar from './pages/MyMotiiv/sections/MyNavbar';\r\nimport SigninModal from './components/common/Login/SignInModal';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  useLocation,\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport FloatBtn from './components/common/Button/FloatBtn';\r\nimport { getProfile, changeIsLogged } from './modules/user';\r\nimport { getWorkspaces } from './modules/mymotiiv';\r\nimport { whiteColors } from './style/color';\r\nimport { authToken } from './lib/api/auth';\r\n\r\nfunction App({ props }) {\r\n  const dispatch = useDispatch();\r\n  const [showLoginModalState, setShowLoginModalState] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const { isLoggedIn } = useSelector(state => state.user);\r\n  const { onFloatBtn } = useSelector(state => state.mymotiiv);\r\n  const { workspaces } = useSelector(state => state.mymotiiv);\r\n\r\n  // 다크모드\r\n  const setColorType = colors => {\r\n    for (const [key, value] of Object.entries(colors)) {\r\n      document.documentElement.style.setProperty(`--${key}`, `${value}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setColorType(whiteColors);\r\n    const token = localStorage.getItem('userToken')\r\n      ? JSON.parse(localStorage.getItem('userToken'))\r\n      : null;\r\n    if (token !== null) {\r\n      authToken(token).then(res => {\r\n        if (res.success) {\r\n          dispatch(getWorkspaces());\r\n          dispatch(getProfile());\r\n          dispatch(changeIsLogged());\r\n        } else {\r\n          // 토큰은 있는데 유효한 토큰이 아닐 때 localstorage삭제\r\n          localStorage.removeItem('userToken');\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  /*   useEffect(() => {\r\n    setColorType(whiteColors);\r\n    dispatch(getWorkspaces());\r\n    dispatch(getProfile());\r\n    hideModal();\r\n  }, [isLoggedInIn]); */\r\n\r\n  const hideModal = () => {\r\n    setShowLoginModalState(false);\r\n    document.body.style.overflow = 'visible';\r\n  };\r\n\r\n  const showModal = () => {\r\n    setShowLoginModalState(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar\r\n        location={location.pathname}\r\n        showModal={showModal}\r\n        isloggined={isLoggedIn}\r\n      />\r\n      <Switch>\r\n        {/* Main & Category & MyMotiiv */}\r\n        <Route\r\n          exact\r\n          path=\"/main\"\r\n          render={props => (\r\n            <Main props={props} showModal={showModal} isLoggined={isLoggedIn} />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          path=\"/category/:hashTag\"\r\n          render={props => (\r\n            <Category\r\n              props={props}\r\n              showModal={showModal}\r\n              isLoggined={isLoggedIn}\r\n            />\r\n          )}\r\n        ></Route>\r\n        {\r\n          <Route\r\n            exact\r\n            path=\"/mymotiiv\"\r\n            render={props => (\r\n              <MyMotiiv\r\n                props={props}\r\n                showModal={showModal}\r\n                isLoggined={isLoggedIn}\r\n              />\r\n            )}\r\n          ></Route>\r\n        }\r\n        <Route\r\n          exact\r\n          path=\"/privacy\"\r\n          render={props => <Privacy props={props} />}\r\n        ></Route>\r\n        {/* Setting */}\r\n        <Route\r\n          exact\r\n          path=\"/setting\"\r\n          render={props => <Setting props={props} />}\r\n        ></Route>\r\n        {/* Admin */}\r\n        <Route\r\n          exact\r\n          path=\"/admin\"\r\n          render={props => <Admin props={props} />}\r\n        ></Route>\r\n        {/* Detail */}\r\n        <Route\r\n          exact\r\n          path=\"/detail/:id\"\r\n          render={props => (\r\n            <Detail props={props} showModal={showModal} isLoggined={isLoggedIn} />\r\n          )}\r\n        ></Route>\r\n        {/* Upload */}\r\n        <Route\r\n          exact\r\n          path=\"/upload\"\r\n          render={props => <Upload props={props} />}\r\n        ></Route>\r\n      </Switch>\r\n      <SigninModal hideModal={hideModal} isShow={showLoginModalState} />\r\n      <FloatBtn workspaces={workspaces} isShow={onFloatBtn} />\r\n      <BottomBanner\r\n        isShow={\r\n          location.pathname !== '/setting' &&\r\n          location.pathname !== '/category/0'\r\n        }\r\n      />\r\n      <Footer isShow={location.pathname !== '/setting'} />\r\n      <MyNavBar isLoggined={isLoggedIn} tag={location.pathname}></MyNavBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(App);\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\style\\theme.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\index.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\user.js",["302","303","304"],"import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from '../lib/createRequestSaga';\r\nimport { createRequestActionTypes } from '../lib/createRequestSaga';\r\nimport * as userAPI from '../lib/api/user';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* ============== 성공,실패 액션을 생성 ============== */\r\n//프로필 정보\r\nconst [\r\n  GET_PROFILE,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAILURE,\r\n] = createRequestActionTypes('user/GET_PROFILE');\r\n//프로필 정보 수정\r\nconst [\r\n  UPDATE_PROFILE,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_PROFILE');\r\n//회원가입\r\nconst [\r\n  CREATE_USER,\r\n  CREATE_USER_SUCCESS,\r\n  CREATE_USER_FAILURE,\r\n] = createRequestActionTypes('user/CREATE_USER');\r\n//로그인\r\nconst [\r\n  LOGIN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE\r\n] = createRequestActionTypes('user/LOGIN');\r\n//회원가입 정보 저장(카카오)\r\nconst SIGNUP_KAKAO = createRequestActionTypes('user/SIGNUP_KAKAO');\r\n//회원가입 정보 초기화\r\nconst RESET_SIGNUP = createRequestActionTypes('user/RESET_SIGNUP');\r\n//회원가입 정보 저장(직업)\r\nconst SIGNUP_JOB = createRequestActionTypes('user/SIGNUP_JOB');\r\n//회원가입 정보 저장(관심사)\r\nconst SIGNUP_KEYWORDS = createRequestActionTypes('user/SIGNUP_KEYWORDS');\r\n//로그인 여부 변경\r\nconst CHANGE_ISLOGGED = createRequestActionTypes('user/CHANGE_ISLOGED');\r\n\r\n/* ============== 액션 호출 함수 생성 ============== */\r\n//프로필 정보\r\nexport const getProfile = createAction(GET_PROFILE);\r\n//프로필 정보 수정\r\nexport const updateProfile = createAction(UPDATE_PROFILE, payload => payload);\r\n//회원가입\r\nexport const createUser = createAction(CREATE_USER, payload => payload);\r\n//로그인\r\nexport const login = createAction(LOGIN, payload => payload);\r\n//회원가입 정보 저장(카카오)\r\nexport const signUpKakao = createAction(SIGNUP_KAKAO);\r\n//회원가입 정보 초기화\r\nexport const resetSignUpInfo = createAction(RESET_SIGNUP);\r\n//회원가입 정보 저장(직업)\r\nexport const signUpJob = createAction(SIGNUP_JOB);\r\n//회원가입 정보 저장(관심사)\r\nexport const signUpKeywords = createAction(SIGNUP_KEYWORDS);\r\n// isLogined state 변경 (자동로그인)\r\nexport const changeIsLogged = createAction(CHANGE_ISLOGGED);\r\n\r\n/* ============== 해당하는 액션 호출시 Saga실행 ============== */\r\n//프로필 정보\r\nconst getUserSaga = createRequestSaga(GET_PROFILE, userAPI.getUserProfile);\r\n//프로필 정보 수정\r\nconst updateUserSaga = createRequestSaga(UPDATE_PROFILE, userAPI.updateUserProfile);\r\n//회원가입\r\nconst createUserSaga = createRequestSaga(CREATE_USER, userAPI.createUser);\r\n//로그인\r\nconst loginSaga = createRequestSaga(LOGIN, userAPI.login);\r\n\r\n/* ============== 요청된 것들 중 가장 마지막 요청만 처리 (여러번 클릭시 모두 처리되면 매우 비효율적!) ============== */\r\nexport function* userSaga() {\r\n  yield takeLatest(GET_PROFILE, getUserSaga);\r\n  yield takeLatest(UPDATE_PROFILE, updateUserSaga);\r\n  yield takeLatest(CREATE_USER, createUserSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\n/* ============== State 초기값 ============== */\r\nconst initState = {\r\n  isSignedUp: null,\r\n\r\n  userInfo: {\r\n    id: null,\r\n    username: '',\r\n    profileImageUrl: '',\r\n    socialType: '',\r\n    snsId: null,\r\n    Job: {\r\n      id: null,\r\n      name: '',\r\n    },\r\n    UserKeywords: [],\r\n    userToken: '',\r\n  },\r\n  userToken: '',\r\n  isLoggedIn: false,\r\n\r\n  signUpKakao: {\r\n    username: '',\r\n    profileImageUrl: '',\r\n    socialType: '',\r\n    snsId: '',\r\n  },\r\n\r\n  jobName: '',\r\n\r\n  keywordNames: [],\r\n};\r\n\r\n/* ============== 액션을 store에 저장하는 리듀서를 handleActions로 처리 ============== */\r\nconst user = handleActions(\r\n  {\r\n    //유저 정보 조회\r\n    [GET_PROFILE_SUCCESS]: (state, { payload: userInfo }) => ({\r\n      ...state,\r\n      userInfo,\r\n    }),\r\n    [GET_PROFILE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    //유저 정보 수정\r\n    [UPDATE_PROFILE_SUCCESS]: (state, { payload: userInfo }) => ({\r\n      ...state,\r\n      userInfo,\r\n    }),\r\n    [UPDATE_PROFILE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    //회원가입\r\n    [CREATE_USER_SUCCESS]: (state, { payload: userInfo }) => ({\r\n      ...state,\r\n      userInfo,\r\n      isLoggedIn: true,\r\n    }),\r\n    [CREATE_USER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n      isLoggedIn: false,\r\n    }),\r\n    //회원가입 정보 초기화\r\n    [RESET_SIGNUP]: (state) => ({\r\n      ...state,\r\n      isSignedUp: null\r\n    }),\r\n    //로그인\r\n    [LOGIN_SUCCESS]: (state, { payload: payload }) => ({\r\n      ...state,\r\n      userInfo: payload.userToken\r\n        ? {\r\n          id: payload.id,\r\n          username: payload.username,\r\n          snsId: payload.snsId,\r\n          socialType: payload.socialType,\r\n          Job: payload.Job,\r\n          UserKeywords: payload.UserKeywords,\r\n          profileImageUrl: payload.profileImageUrl,\r\n        }\r\n        : null,\r\n      userToken: payload.userToken,\r\n      isLoggedIn: payload.isSignedUp ? true : false,\r\n      isSignedUp: payload.isSignedUp,\r\n      profileImageUrl: payload.profileImageUrl,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: data }) => ({\r\n      ...state,\r\n      data,\r\n      isLoggedIn: false,\r\n    }),\r\n    //회원가입 정보 저장(카카오)\r\n    [SIGNUP_KAKAO]: (state, { payload: signUpKakao }) => ({\r\n      ...state,\r\n      signUpKakao,\r\n    }),\r\n    //회원가입 정보 저장(직업)\r\n    [SIGNUP_JOB]: (state, { payload: jobName }) => ({\r\n      ...state,\r\n      jobName,\r\n    }),\r\n    //회원가입 정보 저장(관심사)\r\n    [SIGNUP_KEYWORDS]: (state, { payload: payload }) => ({\r\n      ...state,\r\n      keywordNames: state.keywordNames.indexOf(payload) > -1\r\n        ? state.keywordNames.filter(keywordNames => keywordNames !== payload) //기존 배열에 있을 경우 삭제\r\n        : state.keywordNames.length < 3 //새로 받은 키워드가 기존 배열 안에 없을 경우\r\n          ? state.keywordNames.concat(payload)//기존 배열의 키워드 개수가 2개 이하일 때는 추가\r\n          : state.keywordNames//3개 이상일 경우 변화 없음\r\n    }),\r\n    // 자동로그인 토큰 가지고 정보 가져온 뒤 isloggedin 변환\r\n    [CHANGE_ISLOGGED]: (state, { payload: payload }) => ({\r\n      ...state,\r\n      isLoggedIn: !state.isLoggedIn,\r\n    }),\r\n  },\r\n  initState,\r\n);\r\n\r\nexport default user;\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\mymotiiv.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\style\\color.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Privacy\\Privacy.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Detail\\Detail.js",["305"],"import React, { useState, useEffect } from 'react';\r\nimport DetailComponent from '../../components/Detail/DetailComponent';\r\nimport { getDetailVideoInfo } from '../../modules/video';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Detail({ props, showModal, isLoggined }) {\r\n  const dispatch = useDispatch();\r\n  const { videoInfo, recVideoList, detailLoading, like, save } = useSelector(\r\n    ({ video, loading }) => ({\r\n      videoInfo: video.d_videoInfo,\r\n      recVideoList: video.d_recVideoList,\r\n      save: video.save,\r\n      detailLoading: loading['video/GET_DETAIL_VIDEO_INFO'],\r\n    }),\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getDetailVideoInfo(props.match.params.id));\r\n  }, [props.match.params.id]);\r\n\r\n  return (\r\n    <DetailComponent\r\n      likeStatus={like}\r\n      saveStatus={save}\r\n      videoInfo={videoInfo}\r\n      recVideoList={recVideoList}\r\n      detailLoading={detailLoading}\r\n      showModal={showModal}\r\n      isLoggined={isLoggined}\r\n    ></DetailComponent>\r\n  );\r\n}\r\n\r\nexport default React.memo(Detail);\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Upload\\Upload.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\Main.js",["306"],"import React, { useEffect, useState } from 'react';\r\nimport SwiperBanner from './sections/SwiperBanner';\r\nimport AdBanner from './sections/AdBanner';\r\nimport Section from '../../components/common/Section/Section';\r\nimport { getMainBanners, getMainRecommend } from '../../modules/video';\r\nimport { createDispatchHook, useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Loading from '../../components/common/Loading/Loading';\r\nimport ImageSlider from '../../components/common/Section/ImageSlider';\r\nimport BlackModal from '../../components/common/Modal/BlackModal';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 51rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  @media ${props => props.theme.mobile} {\r\n    height: 30rem;\r\n    margin-bottom: 1.6rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    height: 37.2rem;\r\n    margin-bottom: 0;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    height: 51rem;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n//Section도 페이지별로 쓰이니까 maxwidth 1280px\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media ${props => props.theme.mobile} {\r\n    max-width: 768px;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    min-width: 768px;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    min-width: 1280px;\r\n  }\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  margin-left: 5.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: ${props => (props.text ? '5.1rem' : '3rem')};\r\n  @media ${props => props.theme.mobile} {\r\n    margin-left: 2rem;\r\n    margin-top: 1.5rem;\r\n    margin-bottom: ${props => (props.text ? '2rem' : '1rem')};\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    margin-left: 4rem;\r\n    margin-bottom: ${props => (props.text ? '5.1rem' : '3.4rem')};\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    margin-left: 5.5rem;\r\n    margin-bottom: ${props => (props.text ? '5.1rem' : '3rem')};\r\n  }\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  color: black;\r\n  @media ${props => props.theme.mobile} {\r\n    font-size: 1.8rem;\r\n    margin-bottom: 0.6rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    font-size: 2rem;\r\n    margin-bottom: 0.6rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    font-size: 3rem;\r\n    margin-bottom: 0.6rem;\r\n  }\r\n`;\r\nconst SubTitle = styled.div`\r\n  font-size: 1.6rem;\r\n  color: primary;\r\n  @media ${props => props.theme.mobile} {\r\n    font-size: 1.2rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    font-size: 1.4rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\nconst HighLight = styled.span`\r\n  background: ${({ theme }) => theme.primary};\r\n  background: linear-gradient(\r\n    180deg,\r\n    transparent 0%,\r\n    transparent 20%,\r\n    ${({ theme }) => theme.primary} 20%,\r\n    ${({ theme }) => theme.primary} 55%,\r\n    transparent 55%,\r\n    transparent 100%\r\n  );\r\n`;\r\nconst YeongJinBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  @media ${props => props.theme.mobile} {\r\n    background-color: ${({ theme }) => theme.lightGray};\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    background-color: white;\r\n  }\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n`;\r\nfunction Main({ showModal, isLoggined }) {\r\n  const dispatch = useDispatch();\r\n  const [blackModal, setBlackModal] = useState({\r\n    active: false,\r\n  });\r\n  const BlackModalConfirm = () => {\r\n    if (!isLoggined) {\r\n      setBlackModal({\r\n        ...blackModal,\r\n        active: !blackModal.active,\r\n      });\r\n    }\r\n  };\r\n  const {\r\n    banners,\r\n    recommend,\r\n    recommendText,\r\n    loading_banners,\r\n    loading_recommend,\r\n  } = useSelector(({ video, loading }) => ({\r\n    recommend: video.m_recVideoList,\r\n    banners: video.m_banners,\r\n    recommendText: video.m_recTextList,\r\n    loading_recommend: loading['video/GET_MAIN_RECOMMENDS'],\r\n    loading_banners: loading['video/GET_MAIN_BANNERS'],\r\n  }));\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMainBanners());\r\n    dispatch(getMainRecommend());\r\n  }, []);\r\n\r\n  return (\r\n    <YeongJinBackground>\r\n      {blackModal.active && (\r\n        <BlackModal\r\n          blackModal={blackModal}\r\n          setBlackModal={setBlackModal}\r\n          showModal={showModal}\r\n        ></BlackModal>\r\n      )}\r\n      {Object.keys(banners).length ? (\r\n        <>\r\n          <SwiperBanner\r\n            mostViewVideo={banners.mostViewVideo}\r\n            mostLikeVideo={banners.mostLikeVideo}\r\n            bestVideo={banners.thirdVideos}\r\n          />\r\n          <Section\r\n            object={banners.toptenVideo}\r\n            type=\"top\"\r\n            size=\"large\"\r\n            color=\"gray\"\r\n            text=\"motiiv top 10\"\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            subText=\"이 영상을 본 80%가 바로 일을 시작했어요!\"\r\n          ></Section>\r\n        </>\r\n      ) : (\r\n        <Loading\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            height: '100%',\r\n          }}\r\n        ></Loading>\r\n      )}\r\n      {recommend.length ? (\r\n        recommend.map((rec, idx) =>\r\n          idx === 3 ? (\r\n            <>\r\n              <AdBanner />\r\n              <Section\r\n                key={`MainSection-${idx}`}\r\n                object={rec}\r\n                text={recommendText[idx].title}\r\n                subText={recommendText[idx].subtitle}\r\n                BlackModalConfirm={BlackModalConfirm}\r\n                isLoggined={isLoggined}\r\n                nonfix=\"true\"\r\n              ></Section>\r\n            </>\r\n          ) : (\r\n            <Section\r\n              key={`MainSection-${idx}`}\r\n              object={rec}\r\n              text={recommendText[idx].title}\r\n              subText={recommendText[idx].subtitle}\r\n              BlackModalConfirm={BlackModalConfirm}\r\n              isLoggined={isLoggined}\r\n              nonfix=\"true\"\r\n            ></Section>\r\n          ),\r\n        )\r\n      ) : (\r\n        <Loading></Loading>\r\n      )}\r\n      {/*       {Object.keys(recommend).length ? (\r\n        <>\r\n          <Section\r\n            object={recommend.sectionOne.sectionOnes}\r\n            text={recommend.sectionOne.sectiononeName}\r\n            subText={recommend.sectionOne.sectiononeNameSub}\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            nonfix=\"true\"\r\n          ></Section>\r\n          <Section\r\n            object={recommend.sectionTwo.sectionTwos}\r\n            text={recommend.sectionTwo.sectionTwoName}\r\n            subText={recommend.sectionTwo.sectionTwoNameSub}\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            nonfix=\"true\"\r\n          ></Section>\r\n          <Section\r\n            object={recommend.sectionThree.sectionThrees}\r\n            text={recommend.sectionThree.sectionThreeName}\r\n            subText={recommend.sectionThree.sectionThreeNameSub}\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            nonfix=\"true\"\r\n          ></Section>\r\n          <Section\r\n            object={recommend.sectionFour.sectionFours}\r\n            text={recommend.sectionFour.sectionFourName}\r\n            subText={recommend.sectionFour.sectionFourNameSub}\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            nonfix=\"true\"\r\n          ></Section>\r\n          <Section\r\n            object={recommend.sectionFive.sectionFives}\r\n            text={recommend.sectionFive.sectionFiveName}\r\n            subText={recommend.sectionFive.sectionFiveNameSub}\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            nonfix=\"true\"\r\n          ></Section>\r\n          <Section\r\n            object={recommend.sectionSix.sectionSixs}\r\n            text={recommend.sectionSix.sectionSixName}\r\n            subText={recommend.sectionSix.sectionSixNameSub}\r\n            BlackModalConfirm={BlackModalConfirm}\r\n            isLoggined={isLoggined}\r\n            nonfix=\"true\"\r\n          ></Section>\r\n        </>\r\n      ) : (\r\n        <Loading></Loading>\r\n      )} */}\r\n    </YeongJinBackground>\r\n  );\r\n}\r\n\r\nexport default React.memo(Main);\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\MyMotiiv\\Mymotiiv.js",["307","308","309"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport MyModal from './sections/MyModal';\r\nimport Section from '../../components/common/Section/Section';\r\nimport WorkSpace from '../../components/Workspace/WorkSpace';\r\nimport MyNavBar from './sections/MyNavbar';\r\nimport ImageSlider from '../../components/common/Section/ImageSlider';\r\nimport BlackModal from '../../components/common/Modal/BlackModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../../components/common/Loading/Loading';\r\nimport { getVideos } from '../../modules/mymotiiv';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst MotiivWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  z-index: 0;\r\n`;\r\nconst HighLight = styled.span`\r\n  background: var(--highlight);\r\n`;\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 42rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media ${props => props.theme.mobile} {\r\n    height: 33rem;\r\n    margin-bottom: 1.6rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    height: 37.2rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    height: 42rem;\r\n  }\r\n`;\r\n//Section도 페이지별로 쓰이니까 maxwidth 1280px\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media ${props => props.theme.mobile} {\r\n    max-width: 768px;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    min-width: 768px;\r\n  }\r\n  @media ${props => props.theme.laptop} {\r\n    max-width: 1024px;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    min-width: 1280px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-left: 5.5rem;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  color: var(--categorytext);\r\n  margin-bottom: 3rem;\r\n  @media ${props => props.theme.mobile} {\r\n    font-size: 1.8rem;\r\n    margin-left: 2rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    font-size: 2rem;\r\n    margin-left: 4rem;\r\n    margin-bottom: 5.1rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    font-size: 3rem;\r\n    margin-left: 5.5rem;\r\n    margin-bottom: 5.1rem;\r\n  }\r\n`;\r\n\r\n// const textArray = [\"내가 자주본 모티브\", \"내가 저장한 모티브\", \"최근 재생한 모티브\"];\r\nfunction MyMotiiv({ showModal, isLoggined }) {\r\n  const dispatch = useDispatch();\r\n  const saveButton = false;\r\n  const { pathname } = useLocation();\r\n\r\n  const { myvideos, loading } = useSelector(({ mymotiiv, loading }) => ({\r\n    myvideos: mymotiiv.myvideos,\r\n    loading: loading['mymotiiv/GET_MYVIDEOS'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getVideos());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return isLoggined === true ? (\r\n    <>\r\n      <MotiivWrapper>\r\n        <WorkSpace></WorkSpace>\r\n        {!loading && myvideos && (\r\n          <>\r\n            <Container>\r\n              <Wrapper>\r\n                <Title>\r\n                  내가 <HighLight>자주 본 </HighLight>모티브\r\n                </Title>\r\n                <ImageSlider\r\n                  saveButton={saveButton}\r\n                  object={myvideos.mostViewSort}\r\n                ></ImageSlider>\r\n              </Wrapper>\r\n            </Container>\r\n\r\n            <Container>\r\n              <Wrapper>\r\n                <Title>\r\n                  내가 <HighLight>저장한 </HighLight>모티브\r\n                </Title>\r\n                <ImageSlider\r\n                  saveButton={saveButton}\r\n                  object={myvideos.savedResult}\r\n                ></ImageSlider>\r\n              </Wrapper>\r\n            </Container>\r\n\r\n            <Container>\r\n              <Wrapper>\r\n                <Title>\r\n                  최근 <HighLight>재생한 </HighLight>모티브\r\n                </Title>\r\n                <ImageSlider\r\n                  saveButton={saveButton}\r\n                  object={myvideos.recentViewSort}\r\n                ></ImageSlider>\r\n                l\r\n              </Wrapper>\r\n            </Container>\r\n          </>\r\n        )}\r\n        {loading && <Loading />}\r\n      </MotiivWrapper>\r\n    </>\r\n  ) : (\r\n    <MyModal showModal={showModal} />\r\n  );\r\n}\r\nexport default React.memo(MyMotiiv);\r\n\r\n{\r\n  /* <Section object={SliderObject} text=\"내가 자주 본 모티브\"></Section> */\r\n}\r\n{\r\n  /* <Section object={SliderObject} text=\"내가 저장한 모티브\"></Section>\r\n        <Section object={SliderObject} text=\"최근 재생한 모티브\"></Section> */\r\n}\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\Category.js",["310"],"import React, { useEffect } from 'react';\r\nimport CategoryComponent from '../../components/Category/CategoryComponent';\r\nimport { getCategoryKeywords, getCategoryVideos } from '../../modules/video';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Category({ props, showModal, isLoggined }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    keywords,\r\n    loading,\r\n    videos,\r\n    videoCnt,\r\n    tagName,\r\n    c_tagVideos,\r\n  } = useSelector(({ video, loading }) => ({\r\n    keywords: video.c_keywords,\r\n    videos: video.c_videos,\r\n    videoCnt: video.c_videoCnt,\r\n    tagName: video.c_tagName,\r\n    c_tagVideos: video.c_tagVideos,\r\n    loading: loading['video/GET_CATEGORY_VIDEOS'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategoryKeywords());\r\n    dispatch(getCategoryVideos({ keyword: 0, filters: 'new' }));\r\n  }, []);\r\n\r\n  return (\r\n    <CategoryComponent\r\n      tagName={tagName}\r\n      videoCnt={videoCnt}\r\n      loading={loading}\r\n      keywords={keywords}\r\n      videos={props.match.params.hashTag === '1' ? c_tagVideos : videos}\r\n      hashTag={props.match.params.hashTag}\r\n      showModal={showModal}\r\n      isLoggined={isLoggined}\r\n    ></CategoryComponent>\r\n  );\r\n}\r\n\r\nexport default React.memo(Category);\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\MyMotiiv\\sections\\MyNavbar.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Admin\\Admin.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\auth.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Footer\\Footer.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Banner\\BottomBanner.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Navbar\\Navbar.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\SignInModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\FloatBtn.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\Setting.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\video.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\auth.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\modules\\loading.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\createRequestSaga.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\user.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\mymotiiv.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Modal\\BlackModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\_client.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\MyMotiiv\\sections\\MyModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\sections\\SwiperBanner.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\sections\\AdBanner.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Section\\Section.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Section\\ImageSlider.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Loading\\Loading.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Category\\CategoryComponent.js",["311"],"import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Card from '../common/Card/Card';\r\n//import DropDownMenu from '../../pages/Category/sections/DropDownMenu';\r\nimport SortModal from '../../pages/Category/sections/SortModal';\r\nimport AsideModal from '../../pages/Category/sections/AsideModal';\r\nimport AsideMenu from '../../pages/Category/sections/AsideMenu';\r\nimport Loading from '../common/Loading/Loading';\r\nimport DownArrowGray from '../../assets/global/gray_down.svg';\r\nimport UpperArrowGray from '../../assets/global/gray_upper.svg';\r\nimport BlackModal from '../../components/common/Modal/BlackModal';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst CategoryContainer = styled.div`\r\n  padding: 5rem 5.5rem;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  margin-bottom: 10rem;\r\n  min-height: 100rem;\r\n  @media ${props => props.theme.mobile} {\r\n    flex-direction: column;\r\n    max-width: 37.8rem;\r\n    padding: 1.6rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    flex-direction: row;\r\n    max-width: 768px;\r\n    padding: 5rem 4rem;\r\n  }\r\n  @media ${props => props.theme.laptop} {\r\n    max-width: 1024px;\r\n    padding: 5rem 5.5rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    max-width: 1280px;\r\n    padding: 5rem 5.5rem;\r\n  }\r\n  & {\r\n    letter-spacing: -0.5px;\r\n  }\r\n`;\r\nconst Aside = styled.div`\r\n  min-width: 19.4rem;\r\n  position: relative;\r\n  ${props =>\r\n    props.hashTag !== '0'\r\n      ? css`\r\n          display: none !important;\r\n          @media ${props => props.theme.mobile} {\r\n            display: flex !important;\r\n          }\r\n        `\r\n      : css`\r\n          display: flex !important;\r\n        `}\r\n  flex-direction: column;\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100%;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    margin-right: 4rem;\r\n    width: 18.2rem;\r\n  }\r\n  @media ${props => props.theme.laptop} {\r\n    margin-right: 14.5rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    margin-right: 10.5rem;\r\n    position: fixed;\r\n    top: 10rem;\r\n  }\r\n`;\r\nconst BodyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-left: 0;\r\n\r\n  @media ${props => props.theme.mobile} {\r\n    padding: 0 0.1rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    margin-top: 0;\r\n  }\r\n  @media ${props => props.theme.laptop} {\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    max-width: none;\r\n    margin-left: ${props => (props.isMargin ? '30rem' : 0)};\r\n  }\r\n`;\r\nconst TitleTextAndButton = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  align-items: center;\r\n`;\r\nconst TitleAndSort = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst TitleText = styled.div`\r\n  ${props =>\r\n    props.hashTag !== '0'\r\n      ? css`\r\n          font-size: 2.5rem;\r\n          @media ${props => props.theme.mobile} {\r\n            font-size: 2rem;\r\n          }\r\n          &:after {\r\n            ${props =>\r\n              css`\r\n                content: '# ${props.tagName}';\r\n              `}\r\n          }\r\n        `\r\n      : css`\r\n          color: var(--tag);\r\n          font-size: 1.6rem;\r\n          @media ${props => props.theme.mobile} {\r\n          }\r\n          &:after {\r\n            ${props =>\r\n              css`\r\n                content: '총 ${props.videoCnt}개의 모티브가 있어요!';\r\n              `}\r\n          }\r\n        `}\r\n  font-weight: 700;\r\n`;\r\nconst SortButtonWrapper = styled.div`\r\n  position: relative;\r\n`;\r\nconst SortTitleText = styled.div`\r\n  color: var(--tag);\r\n  font-size: 1.5rem;\r\n  margin-right: 0.7rem;\r\n`;\r\nconst SortButtonImg = styled.img`\r\n  width: 1.5rem;\r\n  height: 1rem;\r\n  padding-bottom: 0.3rem;\r\n`;\r\nconst GridContainer = styled.div`\r\n  margin-top: 2.4rem;\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  ${props =>\r\n    props.hashTag !== '0'\r\n      ? css`\r\n          @media ${props => props.theme.mobile} {\r\n            //grid-template-columns: repeat(1, 1fr);\r\n            justify-content: center;\r\n          }\r\n          @media ${props => props.theme.tablet} {\r\n            grid-template-columns: repeat(3, 1fr);\r\n          }\r\n          @media ${props => props.theme.laptop} {\r\n            grid-template-columns: repeat(4, 1fr);\r\n          }\r\n          @media ${props => props.theme.desktop} {\r\n            grid-template-columns: repeat(4, 1fr);\r\n          }\r\n        `\r\n      : css`\r\n          @media ${props => props.theme.mobile} {\r\n            //grid-template-columns: repeat(1, 1fr);\r\n            justify-content: center;\r\n          }\r\n          @media ${props => props.theme.tablet} {\r\n            grid-template-columns: repeat(2, 1fr);\r\n            max-width: 55.7rem;\r\n          }\r\n          @media ${props => props.theme.laptop} {\r\n            grid-template-columns: repeat(2, 1fr);\r\n            max-width: none;\r\n          }\r\n          @media ${props => props.theme.desktop} {\r\n            grid-template-columns: repeat(3, 1fr);\r\n          }\r\n        `}\r\n  grid-template-rows: auto;\r\n  grid-gap: 2.5rem;\r\n  & div {\r\n    @media ${props => props.theme.tablet} {\r\n      min-width: auto;\r\n      min-height: auto;\r\n    }\r\n  }\r\n`;\r\nfunction CategoryComponent({\r\n  hashTag,\r\n  keywords,\r\n  videos,\r\n  loading,\r\n  videoCnt,\r\n  tagName,\r\n  showModal,\r\n  isLoggined,\r\n}) {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  /* Aside menu 관리하기 위한 state */\r\n  const [activeStatus, setActiveStatus] = useState({\r\n    status: false,\r\n    choice: 0,\r\n    text: '전체',\r\n  });\r\n  const onChangeActiveStatus = () => {\r\n    setActiveStatus({\r\n      ...activeStatus,\r\n      status: !activeStatus.status,\r\n    });\r\n  };\r\n  const onHandleMenuChoice = (idx, text) => {\r\n    setActiveStatus({\r\n      status: false,\r\n      choice: idx,\r\n      text: text,\r\n    });\r\n  };\r\n\r\n  /* 스크롤 위로 올리기 위한 ref */\r\n  const location = useLocation();\r\n  /* 최신순/인기순 등 sort모달 관련 state */\r\n  const [sortStatus, setSortStatus] = useState({\r\n    text: '최신순',\r\n    status: false,\r\n    id: 'new',\r\n  });\r\n  const onHandleSortModalStatus = () => {\r\n    setSortStatus({\r\n      ...sortStatus,\r\n      status: !sortStatus.status,\r\n    });\r\n  };\r\n  const onHandleSortText = (name, id) => {\r\n    setSortStatus({\r\n      status: !sortStatus.status,\r\n      text: name,\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  /* 비-로그인 시 모달을 띄우기 위한 state */\r\n  const [blackModal, setBlackModal] = useState({\r\n    active: false,\r\n  });\r\n\r\n  const BlackModalConfirm = () => {\r\n    if (!isLoggined) {\r\n      setBlackModal({\r\n        ...blackModal,\r\n        active: !blackModal.active,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CategoryContainer>\r\n      {blackModal.active && (\r\n        <BlackModal\r\n          blackModal={blackModal}\r\n          setBlackModal={setBlackModal}\r\n          showModal={showModal}\r\n        ></BlackModal>\r\n      )}\r\n      <Aside hashTag={hashTag}>\r\n        <AsideModal\r\n          keywords={keywords}\r\n          text={activeStatus.text}\r\n          choice={activeStatus.choice}\r\n          filters={sortStatus.id}\r\n          active={activeStatus.status}\r\n          onChangeActiveStatus={onChangeActiveStatus}\r\n          onHandleMenuChoice={onHandleMenuChoice}\r\n        />\r\n        <AsideMenu\r\n          keywords={keywords}\r\n          text={activeStatus.text}\r\n          choice={activeStatus.choice}\r\n          filters={sortStatus.id}\r\n          onHandleMenuChoice={onHandleMenuChoice}\r\n        ></AsideMenu>\r\n        {/*  Drop Down 코드 */}\r\n        {/* <DropDownMenu\r\n          text={activeStatus.text}\r\n          choice={activeStatus.choice}\r\n          onChangeActiveStatus={onChangeActiveStatus}\r\n          active={activeStatus.status}\r\n          onHandleMenuChoice={onHandleMenuChoice}\r\n        /> */}\r\n        {/*         <DropDownMenu\r\n          text=\"직군\"\r\n          name=\"job\"\r\n          onChangeActiveStatus={onChangeActiveStatus}\r\n          active={activeStatus.job}\r\n        />\r\n        <DropDownMenu\r\n          text=\"관심사\"\r\n          name=\"interest\"\r\n          onChangeActiveStatus={onChangeActiveStatus}\r\n          active={activeStatus.interest}\r\n        /> */}\r\n      </Aside>\r\n      <BodyContainer isMargin={location.pathname === '/category/0'}>\r\n        {!loading ? (\r\n          <>\r\n            <TitleAndSort>\r\n              <TitleText\r\n                hashTag={hashTag}\r\n                tagName={tagName ? tagName : 'category로 이동 후 tag를 클릭'}\r\n                videoCnt={videoCnt}\r\n              ></TitleText>\r\n              <SortButtonWrapper>\r\n                <TitleTextAndButton onClick={onHandleSortModalStatus}>\r\n                  <SortTitleText>{sortStatus.text}</SortTitleText>\r\n                  <SortButtonImg\r\n                    src={sortStatus.status ? UpperArrowGray : DownArrowGray}\r\n                    style={{ fill: '#ffffff' }}\r\n                  />\r\n                </TitleTextAndButton>\r\n                <SortModal\r\n                  sortModal={sortStatus.status}\r\n                  onHandleSortText={onHandleSortText}\r\n                  keyword={activeStatus.choice}\r\n                ></SortModal>\r\n              </SortButtonWrapper>\r\n            </TitleAndSort>\r\n            <GridContainer hashTag={hashTag}>\r\n              {videos &&\r\n                videos.map((video, idx) => (\r\n                  <Card\r\n                    key={`Card-${idx}`}\r\n                    obj={video}\r\n                    category={true}\r\n                    showModal={showModal}\r\n                    BlackModalConfirm={BlackModalConfirm}\r\n                    isLoggined={isLoggined}\r\n                    showModal={showModal}\r\n                  />\r\n                ))}\r\n            </GridContainer>\r\n          </>\r\n        ) : (\r\n          <Loading></Loading>\r\n        )}\r\n      </BodyContainer>\r\n    </CategoryContainer>\r\n  );\r\n}\r\n\r\nexport default React.memo(CategoryComponent);\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\SpaceBtn.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\LastPage.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\WorkSpace.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\FirstPage.js",["312","313"],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport btnNaver from '../../../assets/global/btn_naver.png';\r\nimport Kakao from '../../../lib/api/kakao';\r\n\r\nconst Container = styled.div`\r\n  display: ${props => (props.page === 1 ? 'flex' : 'none')};\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-family: 'Spoqa-Han-Sans';\r\n  color: black;\r\n  @media ${props => props.theme.maxlaptop} {\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-weight: 700;\r\n  font-size: 2.5rem;\r\n  @media ${props => props.theme.maxlaptop} {\r\n    font-size: 2.3rem;\r\n  }\r\n  @media ${props => props.theme.mobile} {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 4rem;\r\n  color: ${props => props.theme.darkGray};\r\n  @media ${props => props.theme.maxlaptop} {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 3.5rem;\r\n  }\r\n  @media ${props => props.theme.mobile} {\r\n    font-size: 1.2rem;\r\n    margin-bottom: 5rem;\r\n    margin-top: 1.8rem;\r\n    width: 18rem;\r\n    text-align: center;\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n`;\r\n\r\nconst LinkText = styled.div`\r\n  font-weight: 100;\r\n  font-size: 1.4rem;\r\n  margin-top: 4rem;\r\n  margin-bottom: 2.9rem;\r\n  color: #a7a7a7;\r\n  text-decoration: none;\r\n  @media ${props => props.theme.maxlaptop} {\r\n    margin-top: 4rem;\r\n  }\r\n  @media ${props => props.theme.mobile} {\r\n    font-size: 1.2rem;\r\n    margin-top: 5.5rem;\r\n    width: 17rem;\r\n    text-align: center;\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n\r\nfunction FirstPage({ page, hideModal, pageUp }) {\r\n  const { data } = useSelector(({ user }) => ({\r\n    data: user.isSignedUp,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    //console.log(data);\r\n    if (data === true) {\r\n      hideModal();\r\n    } else {\r\n      pageUp();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container page={page}>\r\n      <Title>모티브에 오신걸 환영해요!</Title>\r\n      <SubTitle>\r\n        로그인을 하고 나의 하루가 달라지는 동기부여 서비스를 경험해보세요.\r\n      </SubTitle>\r\n      <LoginBtn style={{ marginBottom: '1.6rem' }}>\r\n        <img src={btnNaver} />\r\n      </LoginBtn>\r\n      <Kakao hideModal={hideModal} />\r\n      <LinkText>\r\n        <Link exact to=\"/privacy\" onClick={hideModal} style={{ color: '#A7A7A7' }}>개인정보처리방침</Link>\r\n            을 확인하였으며 이에 동의합니다.\r\n          </LinkText>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FirstPage;\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\MoreBtn.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Detail\\DetailComponent.js",["314"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport LikeImage from '../../assets/global/like_icon.svg';\r\nimport SaveImage from '../../assets/global/save_icon.svg';\r\nimport Tag from '../common/Tag/Tag';\r\nimport RecommendCard from '../../pages/Detail/sections/RecommendCard';\r\nimport ShareModal from '../../pages/Detail/sections/ShareModal';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BlackModal from '../common/Modal/BlackModal';\r\nimport Loading from '../common/Loading/Loading';\r\nimport Like from '../common/Like/Like';\r\nimport Save from '../common/Save/Save';\r\n\r\nconst DetailContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 4.5rem 5.5rem;\r\n  display: flex;\r\n  margin-bottom: 10rem;\r\n  color: var(--categorytext);\r\n  @media ${props => props.theme.mobile} {\r\n    flex-direction: column;\r\n    padding: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    flex-direction: column;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\nconst VideoWrapper = styled.div`\r\n  width: 81%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100%;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    width: 100%;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    width: 81%;\r\n  }\r\n`;\r\nconst RecommendWrapper = styled.div`\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100%;\r\n    margin-left: 0;\r\n    padding-left: 1.5rem;\r\n    padding-right: 1.5rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    width: 100%;\r\n    margin-left: 0;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    width: 19%;\r\n    margin-left: 2.5rem;\r\n  }\r\n`;\r\nconst RecommendCardBox = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  @media ${props => props.theme.mobile} {\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    grid-template-columns: repeat(auto-fill, minmax(30rem, 1fr));\r\n    grid-gap: 2rem;\r\n  }\r\n  @media ${props => props.theme.desktop} {\r\n    grid-template-columns: auto;\r\n    & :nth-child(1) {\r\n      margin-top: 0;\r\n    }\r\n    & :nth-child(6) {\r\n      display: none;\r\n    }\r\n    & :nth-child(5) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\nconst VideoInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100%;\r\n    padding-left: 1.5rem;\r\n    padding-right: 1.5rem;\r\n  }\r\n`;\r\nconst InfoHeaderBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  & div {\r\n    font-family: 'SpoqaHanSans';\r\n  }\r\n  margin-top: 2rem;\r\n`;\r\nconst TitleAndButtonBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-weight: bold;\r\n  @media ${props => props.theme.mobile} {\r\n    & :nth-child(2) {\r\n      display: none !important;\r\n    }\r\n  }\r\n`;\r\nconst TitleText = styled.div`\r\n  font-size: 2.3rem;\r\n  width: 75%;\r\n`;\r\nconst ButtonBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  /*   @media ${props => props.theme.mobile} {\r\n    &:nth-child(2) {\r\n      display: none !important;\r\n    }\r\n  } */\r\n`;\r\nconst LikeBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 2rem;\r\n  line-height: 0 !important;\r\n  cursor: pointer;\r\n`;\r\nconst LikeText = styled.div`\r\n  font-size: 2rem;\r\n  margin-right: 0.5rem;\r\n  line-height: 0 !important;\r\n  padding-top: 0.4rem;\r\n  ${props =>\r\n    props.like\r\n      ? css`\r\n          color: black;\r\n        `\r\n      : css`\r\n          color: ${({ theme }) => theme.gray};\r\n        `}\r\n`;\r\nconst LikeImg = styled.img`\r\n  width: 2rem;\r\n  height: 2rem;\r\n`;\r\nconst SaveBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 2rem;\r\n  line-height: 0 !important;\r\n  cursor: pointer;\r\n`;\r\nconst SaveText = styled.div`\r\n  ${props =>\r\n    props.save\r\n      ? css`\r\n          color: black;\r\n        `\r\n      : css`\r\n          color: ${({ theme }) => theme.gray};\r\n        `}\r\n  font-size: 2rem;\r\n  margin-right: 0.5rem;\r\n  line-height: 0 !important;\r\n  padding-top: 0.4rem;\r\n`;\r\nconst SaveImg = styled.img`\r\n  width: 2rem;\r\n  height: 2rem;\r\n`;\r\nconst TagBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding-top: 1rem;\r\n  & div {\r\n    margin-top: 0;\r\n  }\r\n  @media ${props => props.theme.mobile} {\r\n    & div {\r\n      font-size: 1.2rem;\r\n    }\r\n    padding-top: 1.5rem;\r\n  }\r\n`;\r\nconst TextBox = styled.div`\r\n  display: flex;\r\n  margin-top: 3.5rem;\r\n  justify-content: space-between;\r\n  border-bottom: ${props => `1px ${props.theme.gray} solid`};\r\n  padding-bottom: 2rem;\r\n  align-items: center;\r\n  & div {\r\n    font-size: 1.5rem;\r\n    color: ${props => props.theme.gray};\r\n  }\r\n  @media ${props => props.theme.mobile} {\r\n    margin-top: 1.5rem;\r\n    border-bottom: none;\r\n    & :nth-child(2):nth-last-child(1) {\r\n      display: none !important;\r\n    }\r\n  }\r\n`;\r\nconst ViewCount = styled.div`\r\n  padding-right: 1rem;\r\n  border-right: solid #c4c4c4 1px;\r\n`;\r\nconst DateInfo = styled.div`\r\n  padding: 0 1rem;\r\n  border-right: solid #c4c4c4 1px;\r\n`;\r\nconst UserName = styled.div`\r\n  padding: 0 1rem;\r\n`;\r\nconst LeftBox = styled.div`\r\n  display: flex;\r\n`;\r\nconst ShareButton = styled.div`\r\n  font-size: 1.5rem;\r\n  width: 8rem;\r\n  height: 2.8rem;\r\n  border-radius: 5rem;\r\n  padding: 0.67rem 1.3rem;\r\n  padding-top: 0.9rem;\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  cursor: pointer;\r\n  color: black !important;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst VideoDisplay = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 56.25%;\r\n  position: relative;\r\n`;\r\nconst VideoDescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\nconst VideoDescription = styled.div`\r\n  margin-top: 2rem;\r\n  font-size: 1.8rem;\r\n  margin-bottom: 3rem;\r\n  line-height: 2.5rem;\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100%;\r\n    border-bottom: 1px #c4c4c4 solid;\r\n    padding-bottom: 3rem;\r\n    margin-top: 3rem;\r\n  }\r\n  @media ${props => props.theme.tablet} {\r\n    width: 70%;\r\n  }\r\n  @media ${props => props.theme.laptop} {\r\n    width: 60%;\r\n  }\r\n\r\n  /*   ${props =>\r\n    props.toggleExist\r\n      ? css`\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          word-wrap: break-word;\r\n          display: -webkit-box;\r\n          -webkit-line-clamp: 3;\r\n          -webkit-box-orient: vertical;\r\n        `\r\n      : null}\r\n\r\n  ${props =>\r\n    props.toggle\r\n      ? css`\r\n          overflow: visible;\r\n          -webkit-line-clamp: 10;\r\n        `\r\n      : null} */\r\n`;\r\nconst MoreToggleButton = styled.div`\r\n  font-size: 1.5rem;\r\n  color: #686868;\r\n  position: absolute;\r\n  bottom: 0;\r\n  cursor: pointer;\r\n  display: none;\r\n  /*   ${props =>\r\n    props.toggleExist\r\n      ? css`\r\n          display: block;\r\n        `\r\n      : css``}\r\n  ${props =>\r\n    props.toggle\r\n      ? css`\r\n          &::after {\r\n            content: '간략히';\r\n          }\r\n        `\r\n      : css`\r\n          &::after {\r\n            content: '더보기';\r\n          }\r\n        `} */\r\n`;\r\nconst ShareBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\nconst RecommendTitleText = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  margin-bottom: 2rem;\r\n  letter-spacing: -1px;\r\n`;\r\nconst MobileButtonBox = styled.div`\r\n  display: none;\r\n  @media ${props => props.theme.mobile} {\r\n    display: flex;\r\n  }\r\n  justify-content: space-between;\r\n  padding-bottom: 2rem;\r\n  border-bottom: 1px #c4c4c4 solid;\r\n`;\r\n\r\nfunction DetailComponent({\r\n  videoInfo,\r\n  recVideoList,\r\n  detailLoading,\r\n  showModal,\r\n  isLoggined,\r\n}) {\r\n  /*   const [toggle, setToggle] = useState(false);\r\n  const [toggleExist, setToggleExist] = useState(false); */\r\n\r\n  const [shareModal, setShareModal] = useState(false);\r\n  const [blackModal, setBlackModal] = useState({\r\n    active: false,\r\n  });\r\n  const descRef = useRef();\r\n\r\n  const BlackModalConfirm = () => {\r\n    if (!isLoggined) {\r\n      setBlackModal({\r\n        ...blackModal,\r\n        active: !blackModal.active,\r\n      });\r\n    }\r\n  };\r\n\r\n  /* 더보기 버튼 모달창 */\r\n  /*   const onHandleToggleButton = () => {\r\n    setToggle(!toggle);\r\n  }; */\r\n  /* 더보기 버튼 로직 - 텍스트창 높이구해서 일정 이상이면 '더보기'버튼 활성화 */\r\n  useEffect(() => {\r\n    /*     if (descRef.current.offsetHeight > 66) {\r\n      setToggleExist(!toggleExist);\r\n    } */\r\n  }, []);\r\n\r\n  // [blackModal] active 부분 모달띄우게하는 컴퍼넌트\r\n  return (\r\n    <>\r\n      {!detailLoading ? (\r\n        <DetailContainer>\r\n          {blackModal.active && (\r\n            <BlackModal\r\n              blackModal={blackModal}\r\n              setBlackModal={setBlackModal}\r\n              showModal={showModal}\r\n            ></BlackModal>\r\n          )}\r\n          <VideoWrapper>\r\n            <VideoDisplay>\r\n              <iframe\r\n                style={{\r\n                  height: '100%',\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                }}\r\n                src={videoInfo.videoUrl}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </VideoDisplay>\r\n            <VideoInfoWrapper>\r\n              <InfoHeaderBox>\r\n                <TitleAndButtonBox>\r\n                  <TitleText>{videoInfo.title}</TitleText>\r\n                  <ButtonBox>\r\n                    <Like\r\n                      id={videoInfo.id}\r\n                      BlackModalConfirm={BlackModalConfirm}\r\n                      blackModal={blackModal}\r\n                      isLoggined={isLoggined}\r\n                    ></Like>\r\n                    <Save\r\n                      id={videoInfo.id}\r\n                      BlackModalConfirm={BlackModalConfirm}\r\n                      isLoggined={isLoggined}\r\n                    ></Save>\r\n                  </ButtonBox>\r\n                </TitleAndButtonBox>\r\n                <TagBox>\r\n                  {videoInfo.VideoTags &&\r\n                    videoInfo.VideoTags.map(tag => (\r\n                      <Tag\r\n                        hashTag={1}\r\n                        color=\"black\"\r\n                        fontSize=\"1.5rem\"\r\n                        text={tag.name}\r\n                        id={tag.id}\r\n                      ></Tag>\r\n                    ))}\r\n                </TagBox>\r\n                <TextBox>\r\n                  <LeftBox>\r\n                    <ViewCount>조회수 {videoInfo.viewCount}회</ViewCount>\r\n                    <DateInfo>{videoInfo.createdAt}</DateInfo>\r\n                    <UserName>{videoInfo.channelName}</UserName>\r\n                  </LeftBox>\r\n                  <ShareBox>\r\n                    <ShareButton onClick={() => setShareModal(!shareModal)}>\r\n                      공유하기\r\n                    </ShareButton>\r\n                    <ShareModal\r\n                      pageURL={window.location.href}\r\n                      shareModal={shareModal}\r\n                    ></ShareModal>\r\n                  </ShareBox>\r\n                </TextBox>\r\n                <MobileButtonBox>\r\n                  <ButtonBox>\r\n                    <Like\r\n                      id={videoInfo.id}\r\n                      BlackModalConfirm={BlackModalConfirm}\r\n                      blackModal={blackModal}\r\n                      isLoggined={isLoggined}\r\n                    ></Like>\r\n                    <Save\r\n                      id={videoInfo.id}\r\n                      BlackModalConfirm={BlackModalConfirm}\r\n                      isLoggined={isLoggined}\r\n                    ></Save>\r\n                  </ButtonBox>\r\n                  <ShareBox>\r\n                    <ShareButton onClick={() => setShareModal(!shareModal)}>\r\n                      공유하기\r\n                    </ShareButton>\r\n                    <ShareModal\r\n                      pageURL={window.location.href}\r\n                      shareModal={shareModal}\r\n                    ></ShareModal>\r\n                  </ShareBox>\r\n                </MobileButtonBox>\r\n              </InfoHeaderBox>\r\n              <VideoDescriptionWrapper>\r\n                <VideoDescription\r\n                  //toggle={toggle}\r\n                  ref={descRef}\r\n                  //toggleExist={toggleExist}\r\n                >\r\n                  {videoInfo.description}\r\n                </VideoDescription>\r\n                {/*             <MoreToggleButton\r\n              onClick={onHandleToggleButton}\r\n              toggleExist={toggleExist}\r\n              toggle={toggle}\r\n            ></MoreToggleButton> */}\r\n              </VideoDescriptionWrapper>\r\n            </VideoInfoWrapper>\r\n          </VideoWrapper>\r\n          <RecommendWrapper>\r\n            <RecommendTitleText>추천 모티브</RecommendTitleText>\r\n            <RecommendCardBox>\r\n              {recVideoList.map((video, idx) => (\r\n                <RecommendCard video={video} key={`RecVideo-${idx}`} />\r\n              ))}\r\n            </RecommendCardBox>\r\n          </RecommendWrapper>\r\n        </DetailContainer>\r\n      ) : (\r\n        <Loading></Loading>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(withRouter(DetailComponent));\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\SecondPage.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Navbar\\profilemodal\\ProfileModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\sections\\JobModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\sections\\InterstComponent.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Setting\\sections\\InterestModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\video.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Main\\sections\\SwiperContent.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Login\\LoginInterestComponent.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\WorkSpaceContainer.js",["315"],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PlusBtn from './PlusBtn';\r\nimport WorkSpaceBox from './WorkSpaceBox';\r\nimport { getWorkspaces } from '../../modules/mymotiiv';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../common/Loading/Loading';\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 5rem;\r\n  min-height: 20rem;\r\n  background-color: var(--bodybg);\r\n  margin-top: 4rem;\r\n  border-radius: 1rem;\r\n  box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.15);\r\n  @media ${props => props.theme.maxdesktop} {\r\n    min-height: 17.5rem;\r\n  }\r\n`;\r\n\r\nfunction WorkSpaceContainer() {\r\n  const dispatch = useDispatch();\r\n  const { workspaces, loading } = useSelector(({ mymotiiv, loading }) => ({\r\n    workspaces: mymotiiv.workspaces,\r\n    loading: loading['mymotiiv/GET_WORKSPACES'],\r\n  }));\r\n  useEffect(() => {\r\n    dispatch(getWorkspaces());\r\n  }, []);\r\n  return (\r\n    <CenterWrapper>\r\n      {!loading &&\r\n        workspaces &&\r\n        workspaces.map((space, idx) => (\r\n          <WorkSpaceBox\r\n            space={space}\r\n            key={'box-' + idx}\r\n            idx={idx}\r\n            hasToShift={workspaces.length > 3}\r\n          ></WorkSpaceBox>\r\n        ))}\r\n      {!loading && workspaces.length < 6 && (\r\n        <PlusBtn hasToShift={workspaces.length > 3}></PlusBtn>\r\n      )}\r\n      {loading && <Loading></Loading>}\r\n    </CenterWrapper>\r\n  );\r\n}\r\n\r\nexport default React.memo(WorkSpaceContainer);\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Button\\ToggleBtn.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\lib\\api\\kakao.js",["316"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport btnKakao from '../../assets/global/btn_kakao.png';\r\nimport { createProfile, signUpKakao, login } from '../../modules/user';\r\n//import KaKaoLogin from \"react-kakao-login\";\r\n//import axios from \"axios\";\r\n\r\nconst { Kakao } = window;\r\n\r\nconst LoginBtn = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n`;\r\n\r\nfunction KaKao({ props }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const Login = user => {\r\n    dispatch(login(user));\r\n  };\r\n\r\n  const saveKakaoInfo = user => {\r\n    dispatch(signUpKakao(user));\r\n  };\r\n\r\n  const onHandleLoginKaKao = () => {\r\n    Kakao.Auth.login({\r\n      success: authObj => {\r\n        Kakao.Auth.setAccessToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: '/v2/user/me',\r\n          success: function (response) {\r\n            const user = {\r\n              snsId: response.id,\r\n              socialType: 'kakao',\r\n            };\r\n\r\n            //로그인 시도\r\n            Login(user);\r\n\r\n            const profileImageUrl = response.kakao_account.profile.profile_image_url;\r\n            //로그인 정보 없을 시 회원가입을 위해 정보 넘겨주기\r\n            const signin = {\r\n              username: response.kakao_account.profile.nickname,\r\n              profileImageUrl: profileImageUrl ? profileImageUrl : null,\r\n              snsId: response.id,\r\n              socialType: 'kakao',\r\n            };\r\n            saveKakaoInfo(signin);\r\n          },\r\n          fail: function (error) {\r\n            console.log(error);\r\n          },\r\n        });\r\n        //props.history.push(\"/auth\");\r\n      },\r\n      fail: err => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoginBtn\r\n      style={{ marginBottom: '1.6rem' }}\r\n      value=\"KaKao\"\r\n      onClick={onHandleLoginKaKao}\r\n    >\r\n      <img src={btnKakao} />\r\n    </LoginBtn>\r\n  );\r\n}\r\nexport default KaKao;\r\n","C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Section\\TitleContent.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\AsideMenu.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\SortModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\AsideModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Save\\Save.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Detail\\sections\\ShareModal.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Detail\\sections\\RecommendCard.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Like\\Like.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Tag\\Tag.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Card\\Card.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Tag\\ProfileTag.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\PlusBtn.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\WorkSpaceBox.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\pages\\Category\\sections\\Menu.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\common\\Save\\CardSave.js",[],"C:\\Users\\장세영\\Desktop\\motiiv\\motiiv-front\\motiiv-front\\src\\components\\Workspace\\FormBox.js",["317"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport trashIcon from '../../assets/global/trash_box.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  deleteWorkspace,\r\n  createWorkspace,\r\n  updateWorkspace,\r\n} from '../../modules/mymotiiv';\r\n\r\nconst popUp = keyframes`\r\n  0% {\r\n    transform: scale(0.5);\r\n    opacity:0;\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity:0;\r\n  }\r\n\r\n  100% {\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\nconst WorkSpaceInputBox = styled.div`\r\n  transform-origin: center top;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  width: 42rem;\r\n  padding: 3.5rem 3.2rem;\r\n  background: var(--formbox);\r\n  border-radius: 1rem;\r\n  position: absolute;\r\n  cursor: auto;\r\n  top: 12rem;\r\n  filter: drop-shadow(2px 5px 10px rgba(0, 0, 0, 0.15));\r\n  z-index: 3;\r\n  @media ${props => props.theme.maxdesktop} {\r\n    right: ${props => (props.moveLeft ? '-7rem' : null)};\r\n    left: ${props => (props.idx === 0 ? '-7rem' : null)};\r\n  }\r\n  animation: ${popUp} 0.3s both ease-in;\r\n`;\r\nconst Triangle = styled.div`\r\n  z-index: 3;\r\n  position: absolute;\r\n  background-color: var(--formbox);\r\n  text-align: left;\r\n  top: 12.7rem;\r\n  left: calc(50% - 2.3rem);\r\n  transform: translateX(-50%);\r\n  transform: rotate(180deg) skewX(-30deg) scale(1, 0.866);\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-top-right-radius: 20%;\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    background-color: inherit;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border-top-right-radius: 20%;\r\n  }\r\n  &:before {\r\n    transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707)\r\n      translate(0, -50%);\r\n  }\r\n  &:after {\r\n    transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);\r\n  }\r\n  animation: ${fadeIn} 0.1s both ease-in;\r\n  animation-delay: 0.25s;\r\n`;\r\n\r\nconst LineInput = styled.input`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n  height: 5rem;\r\n  padding: 1rem 2rem;\r\n  background: var(--inputline);\r\n  border-radius: 1rem;\r\n  border: none;\r\n  margin-bottom: 2rem;\r\n  outline: none;\r\n  color: var(--categorytext);\r\n  &:nth-child(2) {\r\n    margin-bottom: 1rem;\r\n    &.warning {\r\n      box-shadow: 0 0 1.5pt 1pt #ff0202;\r\n    }\r\n  }\r\n  &::placeholder {\r\n    color: var(--placeholder);\r\n  }\r\n`;\r\n\r\nconst RoundBtn = styled.button`\r\n  transition: 0.4s;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  font-size: 1.6rem;\r\n  padding: 1.2rem 3rem;\r\n  background: transparent;\r\n  border-radius: 3rem;\r\n  border: var(--roundbtn);\r\n  color: var(--swiperafter);\r\n  cursor: pointer;\r\n  &:nth-child(1) {\r\n    margin-right: 1.5rem;\r\n    &:hover {\r\n      color: white;\r\n      border: 1px solid transparent;\r\n      background-color: black;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n  &:nth-child(2) {\r\n    color: var(--formbox);\r\n    background: ${({ theme }) => theme.gray};\r\n    cursor: auto;\r\n    border: none;\r\n    &.active {\r\n      cursor: pointer;\r\n      color: white;\r\n      background: black;\r\n      color: ${({ theme }) => theme.primary};\r\n      font-weight: 700;\r\n    }\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TranshIcon = styled.img`\r\n  width: 3rem;\r\n  height: 3rem;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  cursor: pointer;\r\n  &:hover {\r\n    filter: invert(100%);\r\n  }\r\n`;\r\n\r\nconst EndWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst WarningText = styled.p`\r\n  visibility: ${props => (props.warning ? 'visible' : 'hidden')};\r\n  color: #ff0202;\r\n  margin-bottom: 2rem;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nfunction FormBox({\r\n  hasToShift,\r\n  space,\r\n  idx,\r\n  hideForm,\r\n  isShow,\r\n  isCreate = false,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [inValidateUrl, SetInValidateUrl] = useState(false);\r\n  const [spaceName, SetSpaceName] = useState('');\r\n  const [urlInput, SetUrlInput] = useState('');\r\n  // 아웃 사이드 클릭\r\n  const myRef = useRef();\r\n  const reSetForm = () => {\r\n    hideForm();\r\n    SetSpaceName();\r\n    SetUrlInput();\r\n    SetInValidateUrl(false);\r\n  };\r\n  const handleClickOutside = e => {\r\n    if (hideForm && !myRef?.current?.contains(e.target)) {\r\n      reSetForm();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    space && SetSpaceName(space.name);\r\n    space && SetUrlInput(space.url);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [isShow]);\r\n\r\n  const onChangeName = e => {\r\n    SetSpaceName(e.target.value);\r\n  };\r\n  const onChangeUrl = e => {\r\n    SetUrlInput(e.target.value);\r\n    validURL(e.target.value) ? SetInValidateUrl(false) : SetInValidateUrl(true);\r\n  };\r\n  const onDeleteSpace = () => {\r\n    dispatch(deleteWorkspace(space.id));\r\n    reSetForm();\r\n  };\r\n  const onCreateSpace = () => {\r\n    const spaceContent = {\r\n      name: spaceName,\r\n      url: urlInput,\r\n    };\r\n    isCreate\r\n      ? dispatch(createWorkspace(spaceContent))\r\n      : dispatch(updateWorkspace({ spaceContent, id: space.id }));\r\n    reSetForm();\r\n  };\r\n  const pattern = new RegExp(\r\n    '^(https?:\\\\/\\\\/)?' + // protocol\r\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n    'i',\r\n  );\r\n  const validURL = str => {\r\n    return !str || pattern.test(str);\r\n  };\r\n\r\n  return (\r\n    isShow && (\r\n      <>\r\n        <WorkSpaceInputBox\r\n          idx={idx}\r\n          moveLeft={hasToShift && (idx === 5 || isCreate)}\r\n          ref={myRef}\r\n        >\r\n          <LineInput\r\n            placeholder=\"워크스페이스의 이름을 입력해주세요\"\r\n            value={spaceName}\r\n            onChange={onChangeName}\r\n          ></LineInput>\r\n          <LineInput\r\n            className={inValidateUrl ? 'warning' : ''}\r\n            placeholder=\"URL을 입력해주세요\"\r\n            value={urlInput}\r\n            onChange={onChangeUrl}\r\n          ></LineInput>\r\n          <WarningText warning={inValidateUrl}>\r\n            올바른 URL형식을 입력해 주세요\r\n          </WarningText>\r\n          <EndWrapper>\r\n            <RoundBtn onClick={reSetForm}>취소</RoundBtn>\r\n            <RoundBtn\r\n              onClick={onCreateSpace}\r\n              className={\r\n                spaceName && urlInput && !inValidateUrl ? 'active' : ''\r\n              }\r\n            >\r\n              확인\r\n            </RoundBtn>\r\n            {!isCreate && (\r\n              <TranshIcon onClick={onDeleteSpace} src={trashIcon} />\r\n            )}\r\n          </EndWrapper>\r\n        </WorkSpaceInputBox>\r\n        <Triangle></Triangle>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default React.memo(FormBox);\r\n",{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":62,"column":6,"nodeType":"324","endLine":62,"endColumn":8,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":151,"column":32,"nodeType":"328","messageId":"329","endLine":151,"endColumn":48,"fix":"330"},{"ruleId":"326","severity":1,"message":"327","line":185,"column":34,"nodeType":"328","messageId":"329","endLine":185,"endColumn":50,"fix":"331"},{"ruleId":"326","severity":1,"message":"327","line":194,"column":34,"nodeType":"328","messageId":"329","endLine":194,"endColumn":50,"fix":"332"},{"ruleId":"322","severity":1,"message":"323","line":18,"column":6,"nodeType":"324","endLine":18,"endColumn":29,"suggestions":"333"},{"ruleId":"322","severity":1,"message":"323","line":157,"column":6,"nodeType":"324","endLine":157,"endColumn":8,"suggestions":"334"},{"ruleId":"322","severity":1,"message":"323","line":98,"column":6,"nodeType":"324","endLine":98,"endColumn":8,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":156,"column":1,"nodeType":"338","messageId":"339","endLine":158,"endColumn":2},{"ruleId":"336","severity":1,"message":"337","line":159,"column":1,"nodeType":"338","messageId":"339","endLine":162,"endColumn":2},{"ruleId":"322","severity":1,"message":"323","line":28,"column":6,"nodeType":"324","endLine":28,"endColumn":8,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":344,"column":21,"nodeType":"343","endLine":344,"endColumn":42},{"ruleId":"322","severity":1,"message":"344","line":88,"column":6,"nodeType":"324","endLine":88,"endColumn":12,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":97,"column":9,"nodeType":"348","endLine":97,"endColumn":31},{"ruleId":"349","severity":1,"message":"350","line":386,"column":15,"nodeType":"348","endLine":396,"endColumn":16},{"ruleId":"322","severity":1,"message":"323","line":32,"column":6,"nodeType":"324","endLine":32,"endColumn":8,"suggestions":"351"},{"ruleId":"346","severity":1,"message":"347","line":72,"column":7,"nodeType":"348","endLine":72,"endColumn":29},{"ruleId":"322","severity":1,"message":"352","line":205,"column":6,"nodeType":"324","endLine":205,"endColumn":14,"suggestions":"353"},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["356"],"no-useless-rename","Destructuring assignment payload unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"357","text":"358"},{"range":"359","text":"358"},{"range":"360","text":"358"},["361"],["362"],["363"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["364"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'hideModal' and 'pageUp'. Either include them or remove the dependency array. If 'hideModal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["365"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["366"],"React Hook useEffect has missing dependencies: 'handleClickOutside' and 'space'. Either include them or remove the dependency array.",["367"],"no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},[4248,4264],"payload",[5252,5268],[5736,5752],{"desc":"370","fix":"371"},{"desc":"368","fix":"372"},{"desc":"368","fix":"373"},{"desc":"368","fix":"374"},{"desc":"375","fix":"376"},{"desc":"368","fix":"377"},{"desc":"378","fix":"379"},"Update the dependencies array to be: [dispatch]",{"range":"380","text":"381"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"382","text":"383"},{"range":"384","text":"381"},{"range":"385","text":"381"},{"range":"386","text":"381"},"Update the dependencies array to be: [data, hideModal, pageUp]",{"range":"387","text":"388"},{"range":"389","text":"381"},"Update the dependencies array to be: [handleClickOutside, isShow, space]",{"range":"390","text":"391"},[2275,2277],"[dispatch]",[708,731],"[dispatch, props.match.params.id]",[4335,4337],[2692,2694],[852,854],[2043,2049],"[data, hideModal, pageUp]",[999,1001],[4627,4635],"[handleClickOutside, isShow, space]"]